PRAGMA foreign_keys = ON;

CREATE TABLE users(
    username VARCHAR(20) NOT NULL,
    fullname VARCHAR(40) NOT NULL,
    email VARCHAR(40) NOT NULL,
    filename VARCHAR(64) NOT NULL,
    password VARCHAR(256) NOT NULL,
    created DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(username)
);

CREATE TABLE posts(
    postid int NOT NULL AUTO_INCREMENT,
    filename VARCHAR(64) NOT NULL,
    owner VARCHAR(20) NOT NULL,
    FOREIGN KEY(owner) REFERENCES users(username) ON DELETE CASCADE,
    created DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(postid)

);

CREATE TABLE following(
    username1 VARCHAR(20) NOT NULL,
    FOREIGN KEY(username1) REFERENCES users(username) ON DELETE CASCADE,
    username2 VARCHAR(20) NOT NULL,
    FOREIGN KEY(username2) REFERENCES users(username) ON DELETE CASCADE,
    PRIMARY KEY(username1, username2),
    created DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE comments(
    commentid int NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(commentid),
    owner VARCHAR(20) NOT NULL,
    FOREIGN KEY(owner) REFERENCES users(username) ON DELETE CASCADE,
    postid int NOT NULL,
    FOREIGN KEY(postid) REFERENCES posts(postid),
    text VARCHAR(1024),
    created DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE likes(
    likeid int NOT NULL AUTO_INCREMENT,
    PRIMARY KEY(likeid),
    owner VARCHAR(20) NOT NULL,
    FOREIGN KEY(owner) REFERENCES users(username) ON DELETE CASCADE,
    postid int NOT NULL,
    FOREIGN KEY(postid) REFERENCES posts(postid) ON DELETE CASCADE,
    created DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
)